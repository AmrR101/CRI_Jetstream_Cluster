---
 
 - name: install libselinux-python packages (submit)
   yum: name=libselinux-python state=latest
#   when: submit_host == "yes"

# - name: install libselinux-python packages (compute)
#   yum: name=libselinux-python state=present
#   environment:
#     http_proxy: "http://{% for host in groups['submit_nodes'] %}{{hostvars['headnode']['ansible_host'] }}{% endfor %}:1375"
#   when: submit_host == "no"

 - name: set up /etc/hosts
   template: src=hosts.j2 dest=/etc/hosts

 - name: set hostname
   hostname: name={{ inventory_hostname }}

# - name: configure yum proxy on compute nodes
#   lineinfile:
#     dest: "/etc/yum.conf"
#     insertafter: EOF
#     line: "{% for host in groups['submit_nodes'] %}proxy = http://{{ hostvars[host]['inventory_hostname'] }}:1375 
#            {% endfor %}"
#   when: submit_host == "no"

 - name: install common packages
   yum: name={{ item }} state=present
   with_items:
     - "vim" 
     - "rsync"
     - "epel-release"
     - "openmpi"       #torque
     - "openmpi-devel"       #torque
     - "gcc"           
     - "gcc-c++"       
     - "gcc-gfortran"  
     - "openssl-devel" 
     - "libxml2-devel" 
     - "boost-devel"   
     - "net-tools"
     - "strace"
     - "fail2ban"
     - "wget"  # needed for building QE
#     - "exportfs" 
#     - "firewalld"

# - name: fix broken http for epel on compute nodes
#   lineinfile: 
#     dest: "/etc/yum.repos.d/epel.repo"
#     regexp: "mirrorlist\\=https\\:\\/\\/mirrors\\.fedoraproject\\.org\\/metalink\\?repo\\=epel\\-7\\&arch\\=\\$basearch"
#     line: "mirrorlist=http://mirrors.fedoraproject.org/metalink?repo=epel-7&arch=$basearch"
#   when: submit_host == "no"

 - name: install stuff from epel
   yum: name={{ item }} state=latest
   with_items:
     - "python-pip"
     - "munge" # doesn't work with torque currently... even w/ --enable-munge-auth 
     - "munge-devel"
     - "munge-libs"

 - name: install pexpect from pip
   pip: name=pexpect version=3.3
   when: submit_host == "yes"

 - name: turn off requiretty for sudo
   lineinfile:
     dest: /etc/sudoers
     regexp: "Defaults    requiretty"
     line:  "Defaults    !requiretty"
     state: present

 - name: fix sudo path (for qterm, etc)
   lineinfile:
     dest: /etc/sudoers
     regexp: "Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin"
     line: "Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin"
     state: present
# - name: install tinyproxy
#   yum: name=tinyproxy state=present
#   when: submit_host == "yes"

 - name: export /home/grid_user to compute nodes
   lineinfile:
     dest: /etc/exports
     line:  "/home/grid_user 10.0.0.0/24(rw)"
     state: present
   tags:
     - export_home
   when: submit_host == "yes"

 - name: allow use_nfs_home_dirs
   seboolean: name=use_nfs_home_dirs state=yes persistent=yes
   tags:
     - export_home
   when: submit_host == "no"

 - name: import /home/grid_user on compute nodes
   lineinfile:
     dest: /etc/fstab
     line:  "10.0.0.4:/home/grid_user  /home/grid_user  nfs  defaults 0 0"
     state: present
   tags:
     - export_home
   when: submit_host == "no"

 - name: mount /home/grid_user
   command: "mount -a"
   tags:
     - export_home
   when: submit_host == "no"

# - name: configure tinyproxy on head node
#   template: src=tinyproxy.conf.j2 dest=/etc/tinyproxy/tinyproxy.conf
#   when: submit_host == "yes"

# - name: start tinyproxy
#   service: name=tinyproxy state=restarted enabled=yes
#   when: submit_host == "yes"

